{"content": {"suites": {"0": {"status": {"total_pass": 38, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}, "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_create_probes_from_config", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_create_probes_from_missing_file_fails", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_create_probe", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_create_probe_with_expected_pattern", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_probe_repr_is_probe_definition", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_probe_repr_without_expected_pattern_is_probe_definition", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_probe_interval_must_be_strictly_positive", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_probe_check", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_probe_check_http2", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_probe_check_pattern_found", "rerun": "0"}, "10": {"status": "PASS", "message": "", "test_name": "test_probe_check_pattern_found_chunked", "rerun": "0"}, "11": {"status": "PASS", "message": "", "test_name": "test_probe_check_pattern_not_found", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_probe_check_pattern_on_invalid_text", "rerun": "0"}, "13": {"status": "PASS", "message": "", "test_name": "test_probe_check_pattern_found_on_non_200", "rerun": "0"}, "14": {"status": "PASS", "message": "", "test_name": "test_probe_stops_on_slow_response", "rerun": "0"}, "15": {"status": "PASS", "message": "", "test_name": "test_probe_stops_on_large_response", "rerun": "0"}, "16": {"status": "PASS", "message": "", "test_name": "test_create_scheduler", "rerun": "0"}, "17": {"status": "PASS", "message": "", "test_name": "test_add_scheduler", "rerun": "0"}, "18": {"status": "PASS", "message": "", "test_name": "test_remove_scheduler", "rerun": "0"}, "19": {"status": "PASS", "message": "", "test_name": "test_remove_absent_scheduler_is_ok", "rerun": "0"}, "20": {"status": "PASS", "message": "", "test_name": "test_get_next_just_waits_if_no_probe", "rerun": "0"}, "21": {"status": "PASS", "message": "", "test_name": "test_get_next_always_returns_single_probe", "rerun": "0"}, "22": {"status": "PASS", "message": "", "test_name": "test_get_next_returns_probe_at_specified_interval_on_average", "rerun": "0"}, "23": {"status": "PASS", "message": "", "test_name": "test_scheduler_can_be_quicky_reconfigured", "rerun": "0"}, "24": {"status": "PASS", "message": "", "test_name": "test_scheduler_does_not_fail_if_elected_is_removed", "rerun": "0"}, "25": {"status": "PASS", "message": "", "test_name": "test_scheduler_does_not_elect_already_removed", "rerun": "0"}, "26": {"status": "PASS", "message": "", "test_name": "test_create_schedule", "rerun": "0"}, "27": {"status": "PASS", "message": "", "test_name": "test_schedule_are_compared_by_next_time", "rerun": "0"}, "28": {"status": "PASS", "message": "", "test_name": "test_schedule_advances_by_interval_secs", "rerun": "0"}, "29": {"status": "PASS", "message": "", "test_name": "test_create_kafka_recorder", "rerun": "0"}, "30": {"status": "PASS", "message": "", "test_name": "test_create_kafka_recorder_from_config", "rerun": "0"}, "31": {"status": "PASS", "message": "", "test_name": "test_create_kafka_recorder_from_partial_config", "rerun": "0"}, "32": {"status": "PASS", "message": "", "test_name": "test_kafka_recorder_start_creates_producer", "rerun": "0"}, "33": {"status": "PASS", "message": "", "test_name": "test_kafka_recorder_start_retries_on_error", "rerun": "0"}, "34": {"status": "PASS", "message": "", "test_name": "test_kafka_recorder_record_sends_dict_to_topic", "rerun": "0"}, "35": {"status": "PASS", "message": "", "test_name": "test_kafka_recorder_record_waits_for_producer", "rerun": "0"}, "36": {"status": "PASS", "message": "", "test_name": "test_kafka_recorder_flush_producer", "rerun": "0"}, "37": {"status": "PASS", "message": "", "test_name": "test_kafka_recorder_flush_without_producer", "rerun": "0"}}, "suite_name": "tests/test_checker.py"}, "1": {"suite_name": "tests/test_config.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_load_config_has_default_values", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_load_config_reads_from_specified_section", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_load_config_complains_if_file_is_missing", "rerun": "0"}}, "status": {"total_pass": 3, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "2": {"suite_name": "tests/test_measure.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_create_measure", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_create_measure_without_pattern", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_create_measure_from_dict", "rerun": "0"}}, "status": {"total_pass": 3, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "3": {"suite_name": "tests/test_writer.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_create_kafka_source", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_create_kafka_source_from_config", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_create_kafka_source_from_partial_config", "rerun": "0"}, "3": {"status": "PASS", "message": "", "test_name": "test_kafka_source_start_creates_consumer", "rerun": "0"}, "4": {"status": "PASS", "message": "", "test_name": "test_source_start_retries_on_error", "rerun": "0"}, "5": {"status": "PASS", "message": "", "test_name": "test_kafka_source_get_measure", "rerun": "0"}, "6": {"status": "PASS", "message": "", "test_name": "test_kafka_source_get_measure_waits_for_consumer", "rerun": "0"}, "7": {"status": "PASS", "message": "", "test_name": "test_create_postgres_recorder", "rerun": "0"}, "8": {"status": "PASS", "message": "", "test_name": "test_create_postgres_recorder_from_config", "rerun": "0"}, "9": {"status": "PASS", "message": "", "test_name": "test_create_postgres_recorder_from_partial_config", "rerun": "0"}, "10": {"status": "PASS", "message": "", "test_name": "test_postgres_recorder_start_creates_cursor", "rerun": "0"}, "11": {"status": "PASS", "message": "", "test_name": "test_postgres_recorder_start_retries_on_error", "rerun": "0"}, "12": {"status": "PASS", "message": "", "test_name": "test_postgres_recorder_start_creates_table", "rerun": "0"}, "13": {"status": "PASS", "message": "", "test_name": "test_postgres_recorder_record_inserts_measure", "rerun": "0"}, "14": {"status": "PASS", "message": "", "test_name": "test_postgres_recorder_record_waits_for_cursor", "rerun": "0"}, "15": {"status": "PASS", "message": "", "test_name": "test_postgres_recorder_record_retries_on_error", "rerun": "0"}}, "status": {"total_pass": 16, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "4": {"suite_name": "tests/services/test_kafka.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_kafka_roundtrip", "rerun": "0"}}, "status": {"total_pass": 1, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}, "5": {"suite_name": "tests/services/test_postgres.py", "tests": {"0": {"status": "PASS", "message": "", "test_name": "test_postgres_connection", "rerun": "0"}, "1": {"status": "PASS", "message": "", "test_name": "test_postgres_create_table", "rerun": "0"}, "2": {"status": "PASS", "message": "", "test_name": "test_postgres_create_measure", "rerun": "0"}}, "status": {"total_pass": 3, "total_skip": 0, "total_xpass": 0, "total_xfail": 0, "total_rerun": 0, "total_fail": 0, "total_error": 0}}}}, "date": "January 27, 2021", "start_time": 1611767606, "total_suite": 6, "status": "PASS", "status_list": {"pass": "64", "fail": "0", "skip": "0", "error": "0", "xpass": "0", "xfail": "0", "rerun": "0"}, "total_tests": "64"}